name: 'TauriPublish'
on:
  push:
    branches:
      - release
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: install Rust nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf llvm clang
      - name: install dependencies (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install llvm
      # - name: Sync node version and setup cache
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 'latest'
      #     cache: 'npm'
      - name: install frontend dependencies
        run: |
          npm install --save-exact esbuild
          npm install -D tailwindcss
          npm i -D daisyui@latest
          cargo install --locked trunk
          cargo install --locked wasm-bindgen-cli
      - name: install frontend dependencies (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          npm install -g npx
      - name: show versions
        run: |
          rustc --version
          npm --version
          npx --version
          cargo --version
          trunk --version
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
